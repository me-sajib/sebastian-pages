{"version":3,"file":"component---src-pages-index-js-9fd6273fa8a4613979d1.js","mappings":"6JAQA,IANcA,GAEZC,EAAAA,cAAA,KAAGC,KAAMF,EAAMG,KAAMC,UAAU,SAASJ,EAAMK,S,qGCUhD,MATkBL,GAEdC,EAAAA,cAAA,OAAKG,UAAU,aACZE,EAAWC,OAAO,YAAUC,EAAgBD,OAAO,kBAAgBE,EAAoB,IAAI,wBACtEA,E,wDCoC5B,IAzCoBT,IAWlB,IAAIU,GAVSC,EAAAA,EAAAA,IAAe,aAUKC,KAAKC,aAAaH,sBAC/CI,EACF,oCAAsCJ,EAAwB,UAC5DK,EAAUf,EAAMe,QAAQC,QAAQN,EAAuBI,GAE3D,MAAMG,EAASjB,EAAMiB,OAAOC,KAAI,CAACC,EAAMC,IACrCnB,EAAAA,cAACoB,EAAAA,EAAK,CACJC,IAAKtB,EAAMsB,IAAM,IAAMF,EACvBjB,KAAMgB,EAAKhB,MACRgB,EAAKI,QAIZ,OACEtB,EAAAA,cAAA,OAAKG,UAAU,mBAAmB,WAAS,QACzCH,EAAAA,cAAA,KAAGG,UAAU,qBACU,IAAnBJ,EAAMwB,SAAiBvB,EAAAA,cAAA,QAAMG,UAAU,wBAAuB,eAAqB,GAAKJ,EAAMyB,MAAM,IACtGxB,EAAAA,cAAA,QAAMG,UAAU,4BACb,IAAMJ,EAAM0B,SAAW,EAAG,KAAG1B,EAAM2B,MAAQ,GAAG,MAGnD1B,EAAAA,cAAA,SAAGA,EAAAA,cAAA,QACDG,UAAU,sBACVwB,wBAAyB,CAAEC,OAAQd,MAEpCE,EACG,C,uGCjCV,UAAejB,IACb,MAAM8B,GAAOnB,EAAAA,EAAAA,IAAe,cAUtBoB,EAAwBvB,EAAgBwB,QAC5CC,GAAwC,IAAzBA,EAAYC,WAC3BhB,KAAI,CAACC,EAAMC,IACXnB,EAAAA,cAACkC,EAAAA,EAAW,CACVb,IAAKF,EACLK,MAAON,EAAKiB,MACZrB,QAASI,EAAKkB,QACdX,QAASP,EAAKmB,QACdX,KAAMR,EAAKoB,KACXtB,OAAQE,EAAKqB,MAAQ,OAInBC,EAAmBnC,EAAW0B,QAClCU,GAA8B,IAApBA,EAAOR,WACjBhB,KAAI,CAACC,EAAMC,IACXnB,EAAAA,cAACkC,EAAAA,EAAW,CACVb,IAAKF,EACLK,MAAON,EAAKiB,MACZrB,QAASI,EAAKwB,UACdjB,QAAS,WAAaP,EAAKyB,WAC3BjB,KAAMR,EAAKoB,KACXf,SAAU,EACVP,OAAUE,EAAKqB,MAAQ,OAK3B,OACEvC,EAAAA,cAAC4C,EAAAA,EAAM,CAACC,UAAU,QAAQC,gBAAgB,sBAAsBC,WAAW,GACzE/C,EAAAA,cAAA,OAAK2B,wBAAyB,CAAEC,OAAQC,EAAKlB,KAAKC,aAAaoC,SAC/DhD,EAAAA,cAAA,UAAI,aACS,IACXA,EAAAA,cAAA,aAAO,IACJA,EAAAA,cAACiD,EAAAA,GAAI,CAACC,GAAG,iBAAgB,aAAgB,MAG9ClD,EAAAA,cAACmD,EAAAA,EAAS,MACTX,EACAV,EAGN,C","sources":["webpack://gatsby-starter-clean-resume/./src/components/badge.js","webpack://gatsby-starter-clean-resume/./src/components/citations.js","webpack://gatsby-starter-clean-resume/./src/components/publication.js","webpack://gatsby-starter-clean-resume/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\n\nconst Badge = props => {\n  return (\n  <a href={props.link} className=\"badge\">{props.children}</a>\n  )\n}\n\nexport default Badge\n","import React from \"react\"\nimport CitationData from \"../../content/citations.yaml\"\nimport PublicationData from \"../../content/publications.yaml\"\nimport PatentData from \"../../content/patents.yaml\"\n\nconst Citations = props => {\n  return (\n    <div className=\"citations\">\n      {PatentData.length} patent, {PublicationData.length} publications, {CitationData.count}{\" \"}\n      citations. H-index : {CitationData.hindex}\n    </div>\n  )\n}\n\nexport default Citations\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Badge from \"./badge\"\n\nconst Publication = props => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          publication_highlight\n        }\n      }\n    }\n  `)\n\n  let publication_highlight = data.site.siteMetadata.publication_highlight\n  let highlighted_author =\n    '<span class=\"author-highlighted\">' + publication_highlight + \"</span>\"\n  let authors = props.authors.replace(publication_highlight, highlighted_author)\n\n  const badges = props.badges.map((item, index) => (\n    <Badge \n      key={props.key + '_' + index}\n      link={item.link}>\n        {item.name}\n    </Badge>\n  ))\n\n  return (\n    <div className=\"publication-item\" data-sal=\"fade\">\n      <p className=\"publication-title\">\n        { props.preprint === 1 ? <span className=\"publication-preprint\">[preprint] </span> : \"\" }{props.title}.\n        <span className=\"publication-journal-year\">\n          {\" \" + props.journal || \"\"} ({props.year || \"\"})\n        </span>\n      </p>\n      <p><span\n        className=\"publication-authors\"\n        dangerouslySetInnerHTML={{ __html: authors }}\n      ></span></p>\n      {badges}\n    </div>\n  )\n}\n\nexport default Publication\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Publication from \"../components/publication\"\nimport PublicationData from \"../../content/publications.yaml\"\nimport PatentData from \"../../content/patents.yaml\"\nimport Citations from \"../components/citations\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nexport default props => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          about\n        }\n      }\n    }\n  `)\n\n  const selected_publications = PublicationData.filter(\n    publication => publication.Selected === 1\n  ).map((item, index) => (\n    <Publication\n      key={index}\n      title={item.Title}\n      authors={item.Authors}\n      journal={item.Journal}\n      year={item.Year}\n      badges={item.URLs || []}\n    />\n  ))\n\n  const selected_patents = PatentData.filter(\n    patent => patent.Selected === 1\n  ).map((item, index) => (\n    <Publication\n      key={index}\n      title={item.Title}\n      authors={item.Inventors}\n      journal={\"Patent: \" + item.Identifier}\n      year={item.Year}\n      preprint={0}\n      badges = {item.URLs || []}\n    />\n  ))\n\n\n  return (\n    <Layout pageTitle=\"About\" pageDescription=\"Learn more about me\" showTitle={false}>\n      <div dangerouslySetInnerHTML={{ __html: data.site.siteMetadata.about }} />\n      <h3>\n        Highlights{\" \"}\n        <small>\n          (<Link to=\"/publications\">full list</Link>)\n        </small>\n      </h3>\n      <Citations />\n      {selected_patents}\n      {selected_publications}\n    </Layout>\n  )\n}\n"],"names":["props","React","href","link","className","children","PatentData","length","PublicationData","CitationData","publication_highlight","useStaticQuery","site","siteMetadata","highlighted_author","authors","replace","badges","map","item","index","Badge","key","name","preprint","title","journal","year","dangerouslySetInnerHTML","__html","data","selected_publications","filter","publication","Selected","Publication","Title","Authors","Journal","Year","URLs","selected_patents","patent","Inventors","Identifier","Layout","pageTitle","pageDescription","showTitle","about","Link","to","Citations"],"sourceRoot":""}